@using EndProject.Models
@model object

@{
    var homeViewModel = Model as HomeViewModel;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Football Management System</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/LayoutStyle.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-custom fixed-top">
            <a class="navbar-brand text-white" href="/">
                <span class="nav-name">K<span class="soccer-ball">⚽</span>raLive</span>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/UserMatches">Matches</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/UserNews">News</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/UserTeams">Teams</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            More
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="/UserPlayers">Players</a>
                            <a class="dropdown-item" href="/UserLeagues">Leagues</a>
                            <a class="dropdown-item" href="/UserStadiums">Stadiums</a>
                        </div>
                    </li>
                </ul>
                <a href="@Url.Action("Login", "AdminDashboard")" class="nav-link text-white admin-icon">
                    <i class="fas fa-user-cog"></i>
                </a>
            </div>
        </nav>

        <!-- News Ticker Section -->
        @if (homeViewModel?.NewsItems != null && homeViewModel.NewsItems.Any())
        {
            <div class="news-ticker text-white py-2">
                <marquee behavior="scroll" direction="left">
                    @foreach (var newsItem in homeViewModel.NewsItems)
                    {
                        <span>@newsItem.Title | </span>
                    }
                </marquee>
            </div>
        }
    </header>

    @if (homeViewModel?.SlideshowImages != null && homeViewModel.SlideshowImages.Any())
    {
        <div id="mediaCarousel" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                @for (int i = 0; i < homeViewModel.SlideshowImages.Count; i++)
                {
                    <li data-target="#mediaCarousel" data-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
                }
            </ol>
            <div class="carousel-inner">
                @for (int i = 0; i < homeViewModel.SlideshowImages.Count; i++)
                {
                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <img src="@homeViewModel.SlideshowImages[i]" class="d-block" alt="Image @i">
                    </div>
                }
            </div>
            <a class="carousel-control-prev" href="#mediaCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#mediaCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    }

    <!-- Content wrapper for all pages -->
    <div class="content-wrapper container mt-4">
        <div class="row">
            <div class="col-md-12">
                @RenderBody()
            </div>
        </div>
    </div>

    @if (homeViewModel?.LiveScores != null && homeViewModel.LiveScores.Any())
    {
        <div class="container live-scores mt-3 p-3" style="background-color: #f8f9fa; border-radius: 8px; box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);">
            <h3 class="text-center">Today's Matches</h3>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Competition</th>
                        <th>Home</th>
                        <th>Score</th>
                        <th>Away</th>
                        <th>Status</th>
                        <th>Time</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var match in homeViewModel.LiveScores)
                    {
                        var competition = match["competition"]?["name"]?.ToString();
                        var team1 = match["home"]["name"].ToString();
                        var team2 = match["away"]["name"].ToString();
                        var score = match["scores"]?["score"]?.ToString() ?? "N/A";
                        var status = match["status"].ToString();
                        var matchTime = match["scheduled"]?.ToString() ?? "N/A";

                        // Customize status text
                        string displayStatus = status switch
                        {
                            "NOT STARTED" => "Soon",
                            "IN PLAY" => "Live",
                            "FINISHED" => "Finished",
                            _ => status
                        };

                        // Apply styles based on status
                        string statusClass = displayStatus == "Live" ? "text-success font-weight-bold" :
                        displayStatus == "Finished" ? "text-danger font-weight-bold" :
                        displayStatus == "Soon" ? "text-warning font-weight-bold" : "";

                        <tr>
                            <td>@competition</td>
                            <td>@team1</td>
                            <td>@score</td>
                            <td>@team2</td>
                            <td class="@statusClass">@displayStatus</td>
                            <td>@matchTime</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }


    <footer class="footer mt-auto">
        <div class="container text-center">
            <span class="text-muted">© 2024 Football Management System. All rights reserved.</span>
            <div class="mt-3">
                <a href="#" class="text-muted mr-3"><i class="fab fa-facebook"></i></a>
                <a href="#" class="text-muted mr-3"><i class="fab fa-twitter"></i></a>
                <a href="#" class="text-muted mr-3"><i class="fab fa-instagram"></i></a>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    @RenderSection("Scripts", required: false)
</body>
</html>
